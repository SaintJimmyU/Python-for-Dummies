# from typing import List, MutableSequence

# En Python las Estructuras de Datos son definidas por LISTAS, TUPLAS, DICCIONARIOS Y SETS


# Las LISTAS son Mutables, son Ordenadas y Permite Duplicados

Listas1 = ["Lunes",1,3.99] # Definimos el Contenido Inicial de la Lista
print(Listas1)

Listas1[0]= "Martes" # Modificamos el Contenido de una posicion en la Lista
print(Listas1)

Listas1.append("Lunes") # Agregamos contenido a la Lista
print(Listas1)

print(Listas1[-1]) # "-1" Muestra el contenido del ultimo indice de la Lista 

print(len(Listas1)) # "len" obtiene el total de indices de la Lista

# ----------------------------------------------------------------------------

Listas2 = ["Mateo","Marcos","Lucas","Juan"]
print(Listas2)

Listas1.extend(Listas2) # "extend" permite agregar todos los elementos de otra lista
print(Listas1)

Listas3 = ["***","321","JIMMY","/*/8sd$%"]
print(Listas3)

Listas1.append(Listas3) # En el caso de "Append" cuando se agrega la lista3, 
                        # Append lo agrega todo como un elemento mas en la Lista1
print(Listas1)

Listas1[-1][1] = "1111" # Para actualizar un elemento dentro de otro elemento utilizamos las posiciones
Listas1[-1][3] = "AAAAAAAAAA"
print(Listas1)

# ----------------------------------------------------------------------------
# Las TUPLAS No son Mutables, son Ordenadas y Permite Duplicados
# A diferencia de Las Listas la Tuplas loe elementos se inicializan con o sin Parentesis

Tupla1 = ("A","B","C")
print(Tupla1)

Tupla1 = ("x","y","z")
print(Tupla1)

print(Tupla1[1])
print(Tupla1[-1])

# ----------------------------------------------------------------------------
# Los DICCIONARIOS son Mutables, No son Ordenadas y No Permite Duplicados
# {"llave":"elemento"}
# Un Diccionario no puede tener una llave repetida
# Toda llave asignada debe de ser tipo Texto. Sim embargo para su elemento puede ser cualquier Tipo


Diccionario1 = {"Nombre": "Jimmy","Edad": 42}
print(Diccionario1)

print(Diccionario1["Nombre"]) # No se puede acceder a los elementos por medio de indices sino por la llave designada

Diccionario1["Anio"] = 2022 # De esta forma se a単ade un elemento en una estructura Diccionario
print(Diccionario1)

Diccionario1["Hoobies"] = ["Clash Royale","Among Us","Drums App"] # De esta forma se a単ade un elemento Tipo Lista
print(Diccionario1)

print(Diccionario1.items()) # Retorna el Diccionario como una Tupla

print(Diccionario1.keys()) # Retorna las llaves del Diccionario 

print(Diccionario1.values()) # Retorna los valores de los elementos


# ----------------------------------------------------------------------------
# Los SETS son Mutables, No son Ordenadas y No Permite Duplicados
# Permite guardar elementos UNICOS
# Los SETS no son Ordenados y No se permite Acceder
# Si utilizamos algun indice Python devolvera un error EJ: set1(0)

set1 = {1,2,"Jimmy",0,1.9}
print(set1)

set1.add("Ana Pauli") # De esta forma se a単ade un elemento en una estructura SET
print(set1)

set1.update([12,"Maria",2155454]) # De esta forma se a単ade varios elemento en una estructura SET
print(set1) 

print(len(set1)) # "len" obtiene el total de elementos de la Lista

set1.discard(1.9) # Discard busca el elemento descrito y lo Elimina
print(set1)

set1.remove("Maria") # Al igual que Discard La funcion Remove busca el elemento descrito y lo Elimina 
                     # pero sino lo encuentra Python devolvera un error  
print(set1)

set1.clear() # Clear Elimina todo el contenido del SET y devolverla el SET vacio
print(set1)